{
    "openapi": "3.0.0",
    "info": {
        "title": "User Requests & Game API",
        "version": "1.0.0",
        "description": "API documentation for user requests and game endpoints"
    },
    "paths": {
        "/user-requests/withdraw-requests": {
            "get": {
                "tags": ["User Requests"],
                "summary": "Get withdraw request by sender address",
                "description": "Retrieves a withdraw request for a specific sender address",
                "parameters": [
                    {
                        "in": "query",
                        "name": "sender",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The sender's address"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "_id": {
                                                    "type": "number"
                                                },
                                                "sender": {
                                                    "type": "string"
                                                },
                                                "recipient": {
                                                    "type": "string"
                                                },
                                                "amount": {
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid sender parameter",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "error": {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/game/register": {
            "post": {
                "tags": ["Game"],
                "summary": "Register a new game",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": { "$ref": "#/components/schemas/GameInfo" }
                        }
                    }
                },
                "responses": {
                    "200": { "description": "Game registered or updated successfully" },
                    "400": { "description": "Bad Request" },
                    "500": { "description": "Server Error" }
                }
            }
        },
        "/game/get-info": {
            "get": {
                "tags": ["Game"],
                "summary": "Get game info by idGame",
                "parameters": [
                    {
                        "in": "query",
                        "name": "idGame",
                        "required": true,
                        "schema": { "type": "string" },
                        "description": "The game ID"
                    }
                ],
                "responses": {
                    "200": { "description": "Game info returned" },
                    "400": { "description": "Bad Request" },
                    "500": { "description": "Server Error" }
                }
            }
        },
        "/game/update": {
            "put": {
                "tags": ["Game"],
                "summary": "Update a game",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": { "$ref": "#/components/schemas/GameInfoUpdate" }
                        }
                    }
                },
                "responses": {
                    "200": { "description": "Game updated successfully" },
                    "400": { "description": "Bad Request" },
                    "500": { "description": "Server Error" }
                }
            }
        },
        "/game/delete": {
            "delete": {
                "tags": ["Game"],
                "summary": "Delete a game",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "idGame": { "type": "string" }
                                },
                                "required": ["idGame"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": { "description": "Game deleted successfully" },
                    "400": { "description": "Bad Request" },
                    "500": { "description": "Server Error" }
                }
            }
        },
        "/game/all": {
            "get": {
                "tags": ["Game"],
                "summary": "Get all games",
                "responses": {
                    "200": { "description": "List of all games" },
                    "500": { "description": "Server Error" }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "GameInfo": {
                "type": "object",
                "properties": {
                    "idGame": { "type": "string" },
                    "host": { "type": "string" },
                    "isFinished": { "type": "boolean" },
                    "totalFund": { "type": "string" },
                    "gameName": { "type": "string" },
                    "description": { "type": "string" }
                },
                "required": ["idGame", "host", "isFinished", "totalFund", "gameName", "description"]
            },
            "GameInfoUpdate": {
                "type": "object",
                "properties": {
                    "idGame": { "type": "string" },
                    "host": { "type": "string" },
                    "isFinished": { "type": "boolean" },
                    "totalFund": { "type": "string" },
                    "gameName": { "type": "string" },
                    "description": { "type": "string" }
                },
                "required": ["idGame"]
            }
        }
    }
}
